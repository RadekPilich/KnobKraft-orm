Completely unprioritised list of things to do
=============================================

Before next release
* Finish PatchInterchangeFormat
* Test USB connectivity with Rev2

Before next next release
* Finish Rev2 Layer functionality

BUGS
+ PatchButtons show subtitles only when there are two different synths, not when there is more than one selected
* Global settings needs to change MIDI channel internally when using the settings editor to change it
+ Bug: Turning off all synths in the list issues the program error message that a patch was found that is not part of the query.

UI/UX
* Store filter per synth!
* Edit field should be focused of Change Patch Name box
* Would expect to choose sort order of patches in grid
* The synth button row could be hidden if only a single Synth is enabled (and the Window Title changed as well?)
* The current patch per synth could be hidable
* The current patch should go to the right of the screen
* The tags for a patch should only be displayed when assigned, and an add button could allow for tags assignment. This is a one click more, but the display is less cluttered?
* Better responsiveness for the patch grid - if not enough vertical space, use less rows instead of shrinking the buttons
* Page buttons should be clickable?
* Better responsiveness for the page buttons - should abbreviate

STARTED FEATURES TO BE FINISHED AND ANNOUNCED
* Audio prehear
* MKS-80
* Behringer RD-8
* Scripted Query
* Editor
* Clock Mode Setup
* Masterkeyboard Screen

Patch display
* Allow "show patch" button as the simplified version of the patch diff dialog
* Allow side panel window to show always current patch paramters (like the diff dialog, just without the coloring. Also with hex dump option)
* Should show waveform/oscillator/FFT of preview

Generic Editor
+ Could allow any mapping, to use e.g. the Rev2 to setup the OB6
+ Could "learn"?
+ Could allow any other layout - that would make the current one rather the BCR2000 cheat sheet
+ Could allow vector display and editor
+ Could allow envelope display and editor (instead of knobs for the env)



KawaiK3 - supported by BCR2000
+ need Program Change handler to react on a program change initiated by the Kawai K3 (which should query the new patch, and set the current patch as the new patch)
+ warning, that would make any of the other patches to be the fake edit buffer. I have to think about that.
+ Split view? Left patches, right editor

OB-6
+ Implement parameter set of OB-6 for patch diff

Behringer RD-8
+ Need support for Patterns and Songs with display of content?

RefaceDX
* Patch renaming
* Parameter set missing

Virus
* Patch renaming has to be implemented
* Parameter set missing

Rev2
* Support custom layering by allowing to combine layers to new patches, and by promoting B layers to A layers
* Sanitize tuning name before putting it into the database column (otherwise displays as "BLOB")
* Noteoff on send patch (or send mute patch first? Then I could also just ramp down program volume?)
* Softswitch of Patch

K3
* Drawbar Organ Waveform Generator - could use BCR2000!
* BCR2000 template for editing the wave
* Could render wave as Thumbnail
* Default name handling shaky
* Generic Oscillator shape optimizer? Actually, this could be calculated via FFT

MKS80
* how to deal with tones and patches
* I guess just like the Wave in the K3?

BCR2000
* Should allow to load BCL files. I think it works but the BCR and BCL extensions are not added to the open dialog
* "Send to" is currently not send to edit buffer, as it will use whatever store command is in the BCL
* Send to should block UI, as you really shouldn't click again while it is still sending
* Need "canonical setup" for BCR2000 so it does not need to be reprogrammed when switching synths
* Could use bank list as preset list by querying bank names
* DIN MIDI will be slow now, need second strategy to send

DW8000
* Doesn't properly support the default naming thing

Archiving
* Allow to open or create another database, so you could e.g. sort your patches into different databases. This would require another folder for the thumbnails?
+ Durability - also write all patches on the disk as individual patch files ready to send back to synth [Got Export now]

Generic Module/Adaptations
+ Missing - MD5 cleaning to avoid duplicates
+ Missing - better patch names for synths without patch names
+ Pretty bank names?
+ Would need different "flavours" aka EditBufferCapability, ProgramDumpCabability, BankDumpCapability (Virus), StreamLoadCapability (RefaceDX), StreamDumpCapability (BCR2000), DataFileLoadCapability, HandshakeLoadingCapability (MKS80)
+ Could support "CC flood" and "NRPN flood" types of storage, for certain types of synths which are not supported via sysex
+ Could show which Flavours/Profiles are implemented for each adaptation (checkbox list)
+ Could create FlowChart to select which methods to implement!
+ Provide "orm" python package with denibble, DSI packing etc.
+ Could watch files and hot reload module when changed on disk (for easier development)
+ Could add python editor with hot reload function

Macro page
* Somehow better feedback that a macro has been fired. Speech output? Amazon Polly? A Toast?
* Show on global level if macros on/off 
* Also allow macros to work despite other keys being down (to switch while holding)
* Also allow sequences, not just chords

Librarian
* Allow recursive directory traversal during import
* Could accept synth-initiated dumps at any time
* Could sniff synth out of sysex file opened
* Could introduce collections/sessions/songs  = lists
* Better patch name display - the Rev2 patch names are too long. Make it two rows anyway (with two layers?)
* Make page number clickable to switch to that page, show less page numbers if these are really many
* Bank management (github #9)
* Could have patch name autogenerator like LaserMammoth
* Could have patch interchange format - basically a JSON format with sysex, plus metadata. Serializing the PatchHolder I think should be good enough

Patch Diff
* Could be trimmed down to show only the delta parameters (doesn't make sense in Hex mode)

Advanced Queries
* Needs better operators for comparing a PyTschirp attribute with int, bool so you don't have to type the get()
* Could hide the "p[]" by automatically adding it, could also automatically add the get()
* Should display syntax error in red under line
* Should fill page (fetching more pages until the page is full) - but how to do second page? This is always the problem with client side filtering. Simplest solution - fetch all from database and only then filter.
* Could add autocomplete? With drop down?
* Could use advanced query builder, where you select properties and enter them (that was called QBE at some point)
* could use SQL queries instead of the python hack, needs to explode patches into parameters table, and then construct dynamic SQL

Alternate Tunings
* https://forum.sequential.com/index.php/topic,3468.0.html
* have you managed to change the slot number -> this could be implemented with the MultiSendStrategy now

Database schema
* Should have foreign key constraint imports.id == patches.sourceID
* Should have unique constraing imports.id (should edit buffer import contain synth name? could be scrambled by MD5?)
* Should have non-null everywhere
* Should think about naming convention
* Should create indexes where needed 

Autosampler (the lazy synthesist)
* Need preview mode that will play it to synth (when synth is not turned on?)
* Should have autosample dialog in front of patch grid so you can see where it is
* Cancel should send all notes off!
* Could offer to sample only patches which have no thumbnail yet
* Could allow to record "played" previews with typical midi file per patch type (e.g. bassline/leadline)
* Could add different preview - "oscilloscope" to show only one cycle
* Could add FFT preview as well
* How to decide this is a drone and will not stop (endless release?)

MIDI setup
* Echo test - send a sysex, and see if this comes back (e.g. K3 or MKS80 repeating them). If yes, down prioritize those echos
* MIDI log needs a "turn off" function [Why?]

Global Parameter Editing
* Debounce is currently disabled - can I reenable it?

Big things
    * VST build of Orm for Daws
    * Masterkeyboard setup screen to select which keyboard plays which synth
	* Clock setup screen to determine which device is master clock, can be combined with MIDI routing
	* editor for the synth using the JUCE property editor/Dials. Could do custom layouts for editors (non-skeuomorphic)
	* Adding PyTschirp - for matters like Rev2 Sequencer Features, but also patch randomization, genetic algorithms. Could expose database queries to PyTschirp
	  * Could do targeted randomize - take only the search result as the base set, determine histograms/probability functions for each parameter
	* could sort by patch similarity
	* Adding full BCR2000 support
	* Adding spectrogram display, this needs to keep the current patch above the tab row!
	* Could add page for Synth "SuperPowers", i.e. features or UI that is Synth specific. 
	* Allow for free list of tags? This requires storing the tags properly in the database, I think, and allowing to delete no longer used tags.
	* Follow program change on synth so we know which patch is playing. This seems to be quite hard on the Rev2, as it does not send program change when set to NRPN transmit.
	  * Record notes played (duration) a specific patch
	  * Allow to sort by playing time
	* Synth_v2 class/interface more following the generic adaptation design than the original Synth class	
	* Implement PatchBook Visualization
	* Patch randomizer
	* The automatic patch clusterer!
	* Automatic patch optimizer
	* MIDI routing (first only to and forth, then remapping channels, ...)
	* Clock routing screen
	* Interface into LaserMammoth devices? Can I execute Javascript?
	* Integrate with CTRLR? Can I host their panels? If yes, for what?
	* Can I synchronize multiple devices via the LaserMammoth Backend?
	* Could have voice input for naming patches? General voice control?
	* Should I use Amazon DynamoDB to synchronize multiple installations? Encryption?
	* VST version? If yes, why?

More synthesizers

	+ Behringer RD 8
	+ Novation Circuit

Requested on Reddit

	* Yamaha TX802
	* Yamaha AN1X

Librarian for other stuff (should rather do with adaptation?)

	+ Meris pedal

MacOS X installer
  + The Python problem: https://stackoverflow.com/questions/59415784/cmake-macos-bundleutilities-adds-python-interpreter-to-app-and-doesnt-do-fi
  + Helpful: https://github.com/ionyshch/cmake-bundle-macos/blob/master/CMakeLists.txt https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/PackageGenerators https://gitlab.kitware.com/cmake/community/-/wikis/doc/cpack/Configuration
  + or should i go the pkg route: https://medium.com/swlh/the-easiest-way-to-build-macos-installer-for-your-application-34a11dd08744

Other crash reporting tools not considered:
+ Crash reporting? https://partner.microsoft.com/en-us/dashboard/desktop/overview https://docs.microsoft.com/en-us/windows/win32/appxpkg/windows-desktop-application-program
  - https://support.backtrace.io/hc/en-us/articles/360040516131-Crashpad-Integration-Guide
  - https://partner.microsoft.com/en-US/dashboard/Account/CertificateUpload?accountprogram=win32&callbackUri=/en-US/dashboard/desktop/overview
  - https://drdump.com/crash-reporting-system
  - https://appcenter.ms/apps/create

  Stability
+ Code signing (well, if you don't use MS, you can spare the money)
  - https://shop.globalsign.com/de-de/code-signing
  - https://secure.ssl.com/orders/new
